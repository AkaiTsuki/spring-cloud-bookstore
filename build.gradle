buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.6.RELEASE")
    }
}

allprojects {
    group 'io.github.akaitsuki'
    version '1.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
    }

    ext.junitVersion = '4.11'
    ext.springSessionVersion = '1.2.1.RELEASE'

}

project('spring-cloud-bookstore-ui') {
    description = 'spring cloud bookstore ui'

    apply plugin: 'spring-boot'

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Brixton.SR3'
        }
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework.boot:spring-boot-starter-security")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.session:spring-session-data-mongo:${springSessionVersion}")
        compile("org.springframework.session:spring-session:${springSessionVersion}")
        compile("org.springframework.boot:spring-boot-starter-data-mongodb")
        compile("org.springframework.cloud:spring-cloud-starter-config")
        compile("org.springframework.cloud:spring-cloud-starter-zuul")

        testCompile("junit:junit:${junitVersion}")
    }
}

project('spring-cloud-bookstore-service') {
    description = 'spring cloud bookstore service'

    apply plugin: 'spring-boot'

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework.boot:spring-boot-starter-security")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.session:spring-session-data-mongo:${springSessionVersion}")
        compile("org.springframework.session:spring-session:${springSessionVersion}")
        compile("org.springframework.boot:spring-boot-starter-data-mongodb")
        testCompile("junit:junit:${junitVersion}")
    }
}

project('spring-cloud-bookstore-gateway') {
    description = 'spring cloud bookstore gateway'

    apply plugin: 'spring-boot'

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Brixton.SR3'
        }
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework.boot:spring-boot-starter-security")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.session:spring-session-data-mongo:${springSessionVersion}")
        compile("org.springframework.session:spring-session:${springSessionVersion}")
        compile("org.springframework.boot:spring-boot-starter-data-mongodb")
        compile("org.springframework.cloud:spring-cloud-starter-config")
        compile("org.springframework.cloud:spring-cloud-starter-zuul")

        testCompile("junit:junit:${junitVersion}")
    }
}